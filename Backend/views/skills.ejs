<!-- Hero Section -->
<section class="py-5 mt-5 hero-section">
  <div class="container">
    <div class="row align-items-center">
      <div class="col-lg-6 animate-on-scroll">
        <h1 class="display-3 fw-bold text-white mb-4">My Skills & Expertise</h1>
        <p class="lead text-white mb-4">
          A comprehensive overview of my technical skills, proficiency levels,
          and years of experience in various technologies.
        </p>
        <div class="hero-stats">
          <div class="row">
            <div class="col-md-4">
              <div class="stat-item">
                <h3 class="stat-number"><%= totalSkills %></h3>
                <p class="stat-label text-white">Technologies</p>
              </div>
            </div>
            <div class="col-md-4">
              <div class="stat-item">
                <h3 class="stat-number"><%= avgExperience %></h3>
                <p class="stat-label text-white">Years Experience</p>
              </div>
            </div>
            <div class="col-md-4">
              <div class="stat-item">
                <h3 class="stat-number"><%= featuredSkills.length %></h3>
                <p class="stat-label text-white">Projects Done</p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-lg-6 d-none d-lg-block animate-on-scroll">
        <div class="floating-icons">
          <% if (featuredSkills && featuredSkills.length > 0) { %> <%
          featuredSkills.slice(0, 6).forEach(function(skill, index) { %> <% if
          (skill.icon) { %>
          <i
            class="floating-icon icon-<%= index + 1 %> <%= skill.icon %>"
            data-color="<%= skill.color %>"
          ></i>
          <% } %> <% }); %> <% } %>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Skills Content -->
<section class="py-5">
  <div class="container">
    <!-- Category Filter -->
    <div class="text-center mb-5 animate-on-scroll">
      <div class="skill-filters">
        <button class="btn btn-outline-primary active" data-filter="all">
          All Skills
        </button>
        <% if (groupedSkills && Object.keys(groupedSkills).length > 0) { %> <%
        Object.keys(groupedSkills).forEach(function(category) { %>
        <button class="btn btn-outline-primary" data-filter="<%= category %>">
          <%= category.charAt(0).toUpperCase() + category.slice(1).replace('-',
          ' ') %>
        </button>
        <% }); %> <% } %>
      </div>
    </div>

    <!-- Skeleton loading for skills -->
    <div id="skills-skeleton" class="skills-skeleton" style="display: none">
      <% for(let i = 0; i < 4; i++) { %>
      <div class="skill-category-skeleton">
        <div class="text-center mb-4">
          <div class="skeleton-text skeleton-title"></div>
        </div>
        <div class="row">
          <% for(let j = 0; j < 3; j++) { %>
          <div class="col-lg-4 col-md-6 mb-4">
            <div class="skeleton-card">
              <div class="skeleton-header">
                <div class="skeleton-icon"></div>
                <div class="skeleton-info">
                  <div class="skeleton-text skeleton-sm mb-2"></div>
                  <div class="skeleton-text skeleton-xs"></div>
                </div>
              </div>
              <div class="skeleton-text skeleton-desc mb-3"></div>
              <div class="skeleton-progress mb-2"></div>
              <div class="skeleton-text skeleton-xs mb-2"></div>
              <div class="skeleton-badge"></div>
            </div>
          </div>
          <% } %>
        </div>
      </div>
      <% } %>
    </div>

    <!-- Actual skills content -->
    <div id="skills-content">
      <% if (groupedSkills && Object.keys(groupedSkills).length > 0) { %> <%
      Object.keys(groupedSkills).forEach(function(category) { %>
      <div
        class="skill-category animate-on-scroll"
        data-category="<%= category %>"
      >
        <div class="category-header">
          <h2 class="category-title">
            <%= category.charAt(0).toUpperCase() +
            category.slice(1).replace('-', ' ') %> Skills
          </h2>
          <p class="category-description">
            <% if (category === 'frontend') { %> Technologies I use to build
            responsive and interactive user interfaces <% } else if (category
            === 'backend') { %> Server-side technologies and frameworks I work
            with <% } else if (category === 'database') { %> Database systems
            and management tools I specialize in <% } else if (category ===
            'devops') { %> Tools and practices I use for deployment and
            infrastructure <% } else { %> Additional tools and technologies in
            my toolkit <% } %>
          </p>
        </div>

        <div class="row">
          <% groupedSkills[category].forEach(function(skill) { %>
          <div class="col-lg-4 col-md-6 mb-4">
            <div class="skill-card">
              <div class="skill-header">
                <% if (skill.icon) { %>
                <i
                  class="skill-icon <%= skill.icon %>"
                  data-color="<%= skill.color %>"
                ></i>
                <% } %>
                <div>
                  <h3 class="skill-name"><%= skill.name %></h3>
                  <p class="skill-experience">
                    <%= skill.yearsOfExperience %> year<%=
                    skill.yearsOfExperience !== 1 ? 's' : '' %> experience
                  </p>
                </div>
              </div>

              <% if (skill.description) { %>
              <p class="skill-description"><%= skill.description %></p>
              <% } %>

              <div class="skill-progress">
                <div class="progress-header">
                  <span class="progress-label">Proficiency</span>
                  <span class="progress-value"><%= skill.proficiency %>%</span>
                </div>
                <div class="progress">
                  <div
                    class="progress-bar"
                    data-proficiency="<%= skill.proficiency %>"
                    data-color="<%= skill.color %>"
                    role="progressbar"
                    aria-valuenow="<%= skill.proficiency %>"
                    aria-valuemin="0"
                    aria-valuemax="100"
                  ></div>
                </div>
              </div>

              <span
                class="level-badge level-<%= skill.proficiency < 50 ? 'beginner' : skill.proficiency < 75 ? 'intermediate' : skill.proficiency < 90 ? 'advanced' : 'expert' %>"
              >
                <%= skill.proficiency < 50 ? 'Beginner' : skill.proficiency < 75
                ? 'Intermediate' : skill.proficiency < 90 ? 'Advanced' :
                'Expert' %>
              </span>
            </div>
          </div>
          <% }); %>
        </div>
      </div>
      <% }); %> <% } else { %>
      <div class="text-center py-5">
        <div class="mb-4">
          <i class="fas fa-tools fa-5x text-muted"></i>
        </div>
        <h3>Skills Information Coming Soon</h3>
        <p class="text-muted">
          I'm currently updating my skills information. Please check back later.
        </p>
      </div>
      <% } %>
    </div>
  </div>
</section>

<!-- Skills Charts -->
<section class="py-5 bg-light">
  <div class="container">
    <div class="text-center mb-5 animate-on-scroll">
      <h2 class="display-4 fw-bold">Skills Overview</h2>
      <p class="lead">
        Visual representation of my proficiency across different categories
      </p>
    </div>

    <!-- Skeleton loading for charts -->
    <div id="charts-skeleton" class="charts-skeleton" style="display: none">
      <div class="row">
        <% for(let i = 0; i < 3; i++) { %>
        <div class="col-lg-4 mb-4">
          <div class="skeleton-card">
            <div class="skeleton-text skeleton-title mb-4"></div>
            <% for(let j = 0; j < 5; j++) { %>
            <div class="skeleton-bar">
              <div class="skeleton-text skeleton-sm mb-2"></div>
              <div class="skeleton-progress"></div>
            </div>
            <% } %>
          </div>
        </div>
        <% } %>
      </div>
    </div>

    <!-- Actual charts content -->
    <div id="charts-content">
      <% if (groupedSkills && Object.keys(groupedSkills).length > 0) { %>
      <div class="row">
        <% Object.keys(groupedSkills).slice(0, 3).forEach(function(category) {
        %>
        <div class="col-lg-4 mb-4 animate-on-scroll">
          <div class="category-chart">
            <h3 class="chart-title">
              <%= category.charAt(0).toUpperCase() +
              category.slice(1).replace('-', ' ') %>
            </h3>
            <% groupedSkills[category].slice(0, 5).forEach(function(skill) { %>
            <div class="skill-bar">
              <div class="skill-bar-header">
                <span class="skill-bar-name"><%= skill.name %></span>
                <span class="skill-bar-value"><%= skill.proficiency %>%</span>
              </div>
              <div class="skill-bar-track">
                <div
                  class="skill-bar-fill"
                  data-proficiency="<%= skill.proficiency %>"
                  data-color="<%= skill.color %>"
                ></div>
              </div>
            </div>
            <% }); %>
          </div>
        </div>
        <% }); %>
      </div>
      <% } else { %>
      <div class="text-center py-5">
        <p class="text-muted">
          Charts will be available once skills data is loaded.
        </p>
      </div>
      <% } %>
    </div>
  </div>
</section>

<!-- Call to Action -->
<section class="py-5">
  <div class="container">
    <div class="row">
      <div class="col-12">
        <div class="cta-section text-center">
          <h2 class="cta-title">Ready to Work Together?</h2>
          <p class="cta-description">
            Let's discuss how my skills can help bring your project to life.
          </p>
          <div class="cta-buttons">
            <a href="/contact" class="btn btn-primary btn-lg me-3">
              <i class="fas fa-envelope"></i> Get In Touch
            </a>
            <a href="/projects" class="btn btn-outline-primary btn-lg">
              <i class="fas fa-folder"></i> View My Work
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Skills Page Styles */
  .hero-section {
    background: linear-gradient(135deg, var(--primary-color), var(--gray-800));
    position: relative;
    overflow: hidden;
  }

  .hero-stats .stat-item {
    text-align: center;
    margin-bottom: 1rem;
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0;
    color: white;
  }

  .stat-label {
    font-size: 0.9rem;
    opacity: 0.9;
    margin-bottom: 0;
  }

  .floating-icons {
    position: relative;
    height: 400px;
  }

  .floating-icon {
    position: absolute;
    font-size: 2rem;
    animation: float 6s ease-in-out infinite;
  }

  .floating-icon.icon-1 {
    top: 10%;
    left: 20%;
    animation-delay: 0s;
  }
  .floating-icon.icon-2 {
    top: 20%;
    right: 15%;
    animation-delay: 1s;
  }
  .floating-icon.icon-3 {
    top: 40%;
    left: 10%;
    animation-delay: 2s;
  }
  .floating-icon.icon-4 {
    top: 60%;
    right: 20%;
    animation-delay: 3s;
  }
  .floating-icon.icon-5 {
    bottom: 20%;
    left: 25%;
    animation-delay: 4s;
  }
  .floating-icon.icon-6 {
    bottom: 10%;
    right: 10%;
    animation-delay: 5s;
  }

  @keyframes float {
    0%,
    100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }

  .skill-filters .btn {
    margin: 0.25rem;
    border-radius: var(--radius-full);
    padding: 0.5rem 1.5rem;
    transition: var(--transition);
  }

  .skill-filters .btn.active,
  .skill-filters .btn:hover {
    background: linear-gradient(
      135deg,
      var(--secondary-color) 0%,
      #0284c7 100%
    );
    border-color: var(--secondary-color);
    color: white;
    transform: translateY(-2px);
    box-shadow: var(--shadow);
  }

  .skill-category {
    margin-bottom: 3rem;
  }

  .category-header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .category-title {
    font-size: 1.8rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .category-description {
    color: #6c757d;
    font-size: 1.1rem;
  }

  .skill-card {
    background: white;
    border-radius: var(--radius-lg);
    padding: 1.5rem;
    box-shadow: var(--shadow);
    transition: var(--transition);
    border: 1px solid var(--gray-200);
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .skill-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-xl);
    border-color: var(--secondary-color);
  }

  .skill-header {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
  }

  .skill-icon {
    font-size: 2rem;
    margin-right: 1rem;
    width: 50px;
    text-align: center;
  }

  .skill-name {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 0.25rem;
  }

  .skill-experience {
    color: #6c757d;
    font-size: 0.9rem;
    margin-bottom: 0;
  }

  .skill-description {
    color: #6c757d;
    font-size: 0.95rem;
    margin-bottom: 1rem;
    line-height: 1.5;
    flex-grow: 1;
  }

  .skill-progress {
    margin-bottom: 1rem;
  }

  .progress-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
  }

  .progress-label {
    font-weight: 500;
    font-size: 0.9rem;
  }

  .progress-value {
    font-weight: 600;
    color: var(--primary-color);
  }

  .progress {
    height: 10px;
    border-radius: var(--radius-full);
    background-color: var(--gray-200);
    overflow: hidden;
  }

  .progress-bar {
    border-radius: var(--radius-full);
    transition: width 1s ease;
  }

  .level-badge {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    border-radius: var(--radius-full);
    font-size: 0.8rem;
    font-weight: 600;
    text-transform: uppercase;
  }

  .level-badge.level-beginner {
    background-color: #ffeaa7;
    color: #fdcb6e;
  }
  .level-badge.level-intermediate {
    background-color: #81ecec;
    color: #00b894;
  }
  .level-badge.level-advanced {
    background-color: #fd79a8;
    color: #e84393;
  }
  .level-badge.level-expert {
    background-color: #a29bfe;
    color: #6c5ce7;
  }

  .category-chart {
    background: white;
    border-radius: var(--radius-lg);
    padding: 1.5rem;
    box-shadow: var(--shadow);
    height: 100%;
  }

  .chart-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 1rem;
    text-align: center;
  }

  .skill-bar {
    margin-bottom: 1rem;
  }

  .skill-bar-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
  }

  .skill-bar-name {
    font-size: 0.9rem;
    font-weight: 500;
  }

  .skill-bar-value {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--primary-color);
  }

  .skill-bar-track {
    height: 10px;
    background-color: var(--gray-200);
    border-radius: var(--radius-full);
    overflow: hidden;
  }

  .skill-bar-fill {
    height: 100%;
    border-radius: var(--radius-full);
    transition: width 1s ease;
  }

  .cta-section {
    background: linear-gradient(135deg, var(--bg-light) 0%, #e2e8f0 100%);
    border-radius: var(--radius-xl);
    padding: 3rem 2rem;
  }

  .cta-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
  }

  .cta-description {
    font-size: 1.2rem;
    color: var(--gray-600);
    margin-bottom: 2rem;
  }

  .cta-buttons .btn {
    border-radius: var(--radius-full);
    padding: 0.75rem 2rem;
    font-weight: 600;
  }

  /* Skeleton styles */
  .skills-skeleton,
  .charts-skeleton {
    opacity: 0.7;
  }

  .skill-category-skeleton {
    margin-bottom: 3rem;
  }

  .skeleton-card {
    background: #f8f9fa;
    border-radius: var(--radius-lg);
    padding: 1.5rem;
    box-shadow: var(--shadow);
    margin-bottom: 1rem;
  }

  .skeleton-text {
    background: linear-gradient(90deg, #e0e0e0, #f5f5f5, #e0e0e0);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
    border-radius: 0.25rem;
    height: 1rem;
    margin-bottom: 0.5rem;
  }

  .skeleton-title {
    height: 1.8rem;
    width: 60%;
    margin: 0 auto 1rem;
  }

  .skeleton-sm {
    height: 0.9rem;
    width: 80%;
  }

  .skeleton-xs {
    height: 0.8rem;
    width: 60%;
  }

  .skeleton-desc {
    height: 3rem;
  }

  .skeleton-header {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
  }

  .skeleton-icon {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: linear-gradient(90deg, #e0e0e0, #f5f5f5, #e0e0e0);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
    margin-right: 1rem;
  }

  .skeleton-info {
    flex: 1;
  }

  .skeleton-progress {
    height: 10px;
    background: linear-gradient(90deg, #e0e0e0, #f5f5f5, #e0e0e0);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
    border-radius: var(--radius-full);
  }

  .skeleton-badge {
    width: 30%;
    height: 1.5rem;
    background: linear-gradient(90deg, #e0e0e0, #f5f5f5, #e0e0e0);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
    border-radius: var(--radius-full);
  }

  .skeleton-bar {
    margin-bottom: 1rem;
  }

  @keyframes loading {
    0% {
      background-position: 200% 0;
    }
    100% {
      background-position: -200% 0;
    }
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .hero-section .row {
      text-align: center;
    }

    .floating-icons {
      height: 200px;
    }

    .skill-filters .btn {
      font-size: 0.9rem;
      padding: 0.4rem 1rem;
      margin: 0.15rem;
    }

    .cta-title {
      font-size: 2rem;
    }

    .cta-buttons .btn {
      display: block;
      width: 100%;
      margin-bottom: 1rem;
    }

    .stat-number {
      font-size: 2rem;
    }
  }

  /* Animation on scroll */
  .skill-card {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s cubic-bezier(0.22, 0.61, 0.36, 1);
  }

  .skill-card.animate {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Show skeleton loading while content is being prepared
    const skillsSkeleton = document.getElementById("skills-skeleton");
    const skillsContent = document.getElementById("skills-content");
    const chartsSkeleton = document.getElementById("charts-skeleton");
    const chartsContent = document.getElementById("charts-content");

    // Show skeletons initially
    if (skillsSkeleton && skillsContent) {
      skillsSkeleton.style.display = "block";
      skillsContent.style.display = "none";

      // Simulate loading delay
      setTimeout(function () {
        skillsSkeleton.style.display = "none";
        skillsContent.style.display = "block";
      }, 300);
    }

    if (chartsSkeleton && chartsContent) {
      chartsSkeleton.style.display = "block";
      chartsContent.style.display = "none";

      // Simulate loading delay
      setTimeout(function () {
        chartsSkeleton.style.display = "none";
        chartsContent.style.display = "block";
      }, 300);
    }

    // Apply colors to elements with data-color attributes
    function applyColors() {
      // Apply colors to skill icons
      document.querySelectorAll("[data-color]").forEach(function (element) {
        const color = element.getAttribute("data-color");
        if (element.tagName === "I") {
          element.style.color = color;
        } else {
          element.style.backgroundColor = color;
        }
      });

      // Apply colors to progress bars
      document
        .querySelectorAll(".progress-bar, .skill-bar-fill")
        .forEach(function (element) {
          const proficiency = element.getAttribute("data-proficiency");
          const color = element.getAttribute("data-color");

          if (proficiency) {
            element.style.width = "0%";
            setTimeout(function () {
              element.style.width = proficiency + "%";
            }, 100);
          }

          if (color) {
            element.style.backgroundColor = color;
          }
        });
    }

    // Apply colors after a short delay to ensure elements are rendered
    setTimeout(applyColors, 100);

    // Category filtering
    const filterButtons = document.querySelectorAll("[data-filter]");
    const skillCategories = document.querySelectorAll(".skill-category");

    filterButtons.forEach((button) => {
      button.addEventListener("click", function () {
        const filter = this.getAttribute("data-filter");

        // Update active button
        filterButtons.forEach((btn) => btn.classList.remove("active"));
        this.classList.add("active");

        // Filter categories
        skillCategories.forEach((category) => {
          if (
            filter === "all" ||
            category.getAttribute("data-category") === filter
          ) {
            category.style.display = "block";
          } else {
            category.style.display = "none";
          }
        });
      });
    });

    // Animate progress bars on scroll
    const observerOptions = {
      threshold: 0.3,
      rootMargin: "0px 0px -50px 0px",
    };

    const observer = new IntersectionObserver(function (entries) {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("animate");
        }
      });
    }, observerOptions);

    // Observe skill cards
    document
      .querySelectorAll(".skill-card, .category-chart")
      .forEach((card) => {
        observer.observe(card);
      });
  });
</script>
